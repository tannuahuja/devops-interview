-----------------------------KUBERNETES-----------------
what problem k8s solved
architecture
diff btw pods vs development vs namespace
How does Kubernetes achieve high availability?
Kubernetes networking models
What are Labels and Selectors in Kubernetes?
taints and tolerations
node selector 
Kubernetes handle storage how
secrets and ConfigMaps
to troubleshoot deployment : Using kubectl commands to describe, logs, exec into Pods, 
checking events, examining configuration, and using tools like kube-state-metrics or Prometheus for monitoring.
what is role of helm
rolling updates and rollbacks
Kubernetes Cluster Autoscaler.
how k8s manage secrets
Horizontal Pod Autoscaler (HPA)
Init Containers 
process of upgrading Kubernetes clusters
Deployment VS StatefulSet 
Pod affinity and anti-affinity
how k8s handle container resource limits and requests
role of kube-proxy, kubelet....
daemonset vs stateful set 
How does Kubernetes handle node failure and rescheduling of Pods
job vs cron job in k8s
How to handle application configuration updates without downtime?
    supports rolling updates for Deployments and StatefulSets,
    ensuring zero downtime by gradually replacing old Pods with new ones based on defined update strategies and readiness checks.
types of probes : readiness, liveness, startup
 multi-tenancy and isolation mechanisms
manage env variables

How do components like etcd, kube-apiserver, kube-controller-manager, and kube-scheduler work together to ensure fault tolerance and reliability?
Discuss Kubernetes network plugins (CNI).  CNI plugins such as Calico, Flannel, and Cilium. When would you choose one over the other for Kubernetes networking?
What role do Services, Endpoints, and Ingress controllers play in Kubernetes networking?
You have a Kubernetes cluster with multiple nodes running out of resources (CPU/memory). How would you diagnose resource bottlenecks and optimize resource allocation across nodes using Kubernetes tools and metrics?
Explain Kubernetes PersistentVolumes (PVs) and PersistentVolumeClaims (PVCs). How would you dynamically provision and manage storage for stateful applications running in Kubernetes Pods?
pod scheduling mechansm
You are deploying a microservices architecture in Kubernetes. How would you design and implement effective service discovery, communication, and fault tolerance strategies using Kubernetes features like DNS, Labels, and Pod affinity/anti-affinity?
Kubernetes security best practices
You need to automate CI/CD pipelines for deploying applications to Kubernetes clusters. Describe the architecture and components you would use, including tools like Jenkins, GitLab CI, Helm charts, and Kubernetes Deployments.
Discuss Kubernetes monitoring and logging strategies. How would you collect, analyze, and visualize metrics and logs from Kubernetes clusters using tools like Prometheus, Grafana, Fluentd, and Elasticsearch?
You are tasked with designing a Kubernetes cluster architecture for a global, geo-distributed application deployment. Outline the considerations and Kubernetes features you would leverage to achieve high availability, performance, and data locality across multiple regions.


---------------------------------DOCKER--------------------------------------
docker container vs image
Docker layers and their significance
How do you share data between Docker containers
docker volumes
docker compose 
Docker build vs Docker run
networking models : bridge, host, overlay, and MACVLAN
container orchestration
manage docker secrets
troubleshoot docker container if won't start : logs, inspect, events
Docker Swarm, and how does it differ from Kubernetes
monitor Docker containers : Docker Stats, Prometheus, or commercial monitoring solutions to collect metrics on container CPU, memory usage, and network activity
Docker Hub is a cloud-based repository for Docker images, where users can store, share, and manage Docker images publicly or privately.
Docker container lifecycle management
 handle container networking across different hosts
docker health checks and importance
Docker multi-stage build
How do you secure Docker containers in a production environment
containerisation vs virtualisation
handle networking between containers on the same host and across different hosts?
Docker storage drivers. What are they, and how do they impact container performance and storage management?
Docker layer caching and how it influences Docker image builds. What strategies can you use to optimize Docker image builds for caching efficiency?
You have a Docker container running a microservice application that frequently crashes due to memory issues. How would you diagnose and troubleshoot this issue using Docker tools and commands?
What are Docker security best practices? How would you secure Docker containers and the Docker daemon in a production environment?
You are tasked with designing a highly available and fault-tolerant Docker container deployment architecture. Outline the components and considerations you would include in this architecture.
 Docker overlay networks. How do overlay networks facilitate container communication across multiple Docker hosts in a cluster?
manage docker secrets, sensitive information and API
Docker volumes plugins
You encounter a scenario where a Docker container fails to start due to a networking issue. Describe the steps you would take to diagnose and resolve the problem, considering container networking modes and Docker networking tools.


