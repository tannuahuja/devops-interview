-----------------------------KUBERNETES-----------------
what problem k8s solved
architecture
diff btw pods vs development vs namespace
How does Kubernetes achieve high availability?
Kubernetes networking models
What are Labels and Selectors in Kubernetes?
taints and tolerations
node selector 
Kubernetes handle storage how
secrets and ConfigMaps
to troubleshoot deployment : Using kubectl commands to describe, logs, exec into Pods, 
checking events, examining configuration, and using tools like kube-state-metrics or Prometheus for monitoring.
what is role of helm
rolling updates and rollbacks
Kubernetes Cluster Autoscaler.
how k8s manage secrets
Horizontal Pod Autoscaler (HPA)
Init Containers 
process of upgrading Kubernetes clusters
Deployment VS StatefulSet 
Pod affinity and anti-affinity
how k8s handle container resource limits and requests
role of kube-proxy, kubelet....
daemonset vs stateful set 
How does Kubernetes handle node failure and rescheduling of Pods
job vs cron job in k8s
How to handle application configuration updates without downtime?
    supports rolling updates for Deployments and StatefulSets,
    ensuring zero downtime by gradually replacing old Pods with new ones based on defined update strategies and readiness checks.
types of probes : readiness, liveness, startup
 multi-tenancy and isolation mechanisms
manage env variables

How do components like etcd, kube-apiserver, kube-controller-manager, and kube-scheduler work together to ensure fault tolerance and reliability?
Discuss Kubernetes network plugins (CNI).  CNI plugins such as Calico, Flannel, and Cilium. When would you choose one over the other for Kubernetes networking?
What role do Services, Endpoints, and Ingress controllers play in Kubernetes networking?
You have a Kubernetes cluster with multiple nodes running out of resources (CPU/memory). How would you diagnose resource bottlenecks and optimize resource allocation across nodes using Kubernetes tools and metrics?
Explain Kubernetes PersistentVolumes (PVs) and PersistentVolumeClaims (PVCs). How would you dynamically provision and manage storage for stateful applications running in Kubernetes Pods?
pod scheduling mechansm
You are deploying a microservices architecture in Kubernetes. How would you design and implement effective service discovery, communication, and fault tolerance strategies using Kubernetes features like DNS, Labels, and Pod affinity/anti-affinity?
Kubernetes security best practices
You need to automate CI/CD pipelines for deploying applications to Kubernetes clusters. Describe the architecture and components you would use, including tools like Jenkins, GitLab CI, Helm charts, and Kubernetes Deployments.
Discuss Kubernetes monitoring and logging strategies. How would you collect, analyze, and visualize metrics and logs from Kubernetes clusters using tools like Prometheus, Grafana, Fluentd, and Elasticsearch?
You are tasked with designing a Kubernetes cluster architecture for a global, geo-distributed application deployment. Outline the considerations and Kubernetes features you would leverage to achieve high availability, performance, and data locality across multiple regions.


---------------------------------DOCKER--------------------------------------
docker container vs image
Docker layers and their significance
How do you share data between Docker containers
docker volumes
docker compose 
Docker build vs Docker run
networking models : bridge, host, overlay, and MACVLAN
container orchestration
manage docker secrets
troubleshoot docker container if won't start : logs, inspect, events
Docker Swarm, and how does it differ from Kubernetes
monitor Docker containers : Docker Stats, Prometheus, or commercial monitoring solutions to collect metrics on container CPU, memory usage, and network activity
Docker Hub is a cloud-based repository for Docker images, where users can store, share, and manage Docker images publicly or privately.
Docker container lifecycle management
 handle container networking across different hosts
docker health checks and importance
Docker multi-stage build
How do you secure Docker containers in a production environment
containerisation vs virtualisation

handle networking between containers on the same host and across different hosts?
Docker storage drivers. What are they, and how do they impact container performance and storage management?
Docker layer caching and how it influences Docker image builds. What strategies can you use to optimize Docker image builds for caching efficiency?
You have a Docker container running a microservice application that frequently crashes due to memory issues. How would you diagnose and troubleshoot this issue using Docker tools and commands?
What are Docker security best practices? How would you secure Docker containers and the Docker daemon in a production environment?
You are tasked with designing a highly available and fault-tolerant Docker container deployment architecture. Outline the components and considerations you would include in this architecture.
 Docker overlay networks. How do overlay networks facilitate container communication across multiple Docker hosts in a cluster?
manage docker secrets, sensitive information and API
Docker volumes plugins
You encounter a scenario where a Docker container fails to start due to a networking issue. Describe the steps you would take to diagnose and resolve the problem, considering container networking modes and Docker networking tools.


--------------------------TERRAFORM---------------------
pirpose of terraform
how is terraform different from Ansible, Chef, Puppet
terraform workflow
why terraform state is impt
How does Terraform handle dependencies between resources
variable : string, number, bool, list, map, and object.
usage of : interpolation syntax (${}) 
How does Terraform manage sensitive data like passwords or API keys
How do you configure multiple providers in a single configuration?
How do you manage Terraform state? What are remote backends, and why would you use them
What are Terraform data sources, and how are they used? 
Describe Terraform locals and their purpose. When would you use locals in your Terraform configuration?
How do you use outputs to retrieve information from Terraform resources?
workspace. When would you use multiple workspaces in a Terraform project?
lifecycle hooks (create_before_destroy, ignore_changes). When and how would you use them?
Terraform's plan and apply process. What does each step involve, and why are they important?
state locking. Why is it important in a collaborative environment?
graph and how it relates to resource dependencies and execution order.
How do you integrate Terraform with version control systems (like Git) and CI/CD pipelines?
remote backend (s3, azure blob storage, gcp cloud )
how to manage sensitive data, secrets in diff environment : prod, dev, staging
Discuss strategies for handling Terraform state file management in a team environment.
error handling and troubleshooting strategies
What are Terraform modules registries (like Terraform Registry, Nexus, Artifactory)? How do they facilitate module sharing and reuse?
terraform use case
How would you extend Terraform functionality using plugins or custom providers?
Terraform vs  AWS CloudFormation or Azure Resource Manager (ARM) templates?
Terraform CDK (Cloud Development Kit)
limitations or challenges of using Terraform
handle Terraform upgrades and changes to provider APIs in a production environment?


Explain the Terraform plan execution phase. How does Terraform determine the execution plan, and what factors influence it?
Terraform state locking mechanisms. How does Terraform handle concurrent operations and ensure state consistency across team members?
lifecycle management
how Terraform handles resource dependencies and ensures proper order of resource creation and deletion using implicit and explicit dependencies.
count and for_each
ignore_changes when and why to use this 
use Terraform to provision resources across multiple cloud providers (e.g., AWS, Azure, Google Cloud) within the same configuration
migrate existing Terraform state from local storage to a remote backend. What precautions and steps would you take to ensure a smooth transition?
How does Terraform handle state encryption and security? What are best practices for securing sensitive data stored in Terraform state files?


----------------JENKINS---------------------
why we use and need of jenkins
how jenkins file is used
Explain the difference between Declarative and Scripted Pipeline syntax in Jenkins.
what is jenkins pipeline
How do you trigger a Jenkins build?
jenkins master slave architecture
How can Jenkins be integrated with Docker?
jenkins agents
How do you manage Jenkins security?
What is the role of a Jenkins administrator?
What are Jenkins Slave Nodes and how are they configured?
What is the purpose of the Jenkinsfile in a Git repository?
How can Jenkins handle multiple Git repositories in a single job?
jenkins webhook integration
configure email notifications in Jenkins?
integrate slack send notification
How do you troubleshoot a failed Jenkins build?
What is the difference between continuous integration, continuous delivery, and continuous deployment?
How do you handle environment-specific configurations in Jenkins
How do you manage secrets and credentials in Jenkins?
What is the role of Groovy in Jenkins?
How do you implement SSL/TLS in Jenkins?
What are some best practices for Jenkins job configuration?
How do you integrate Jenkins with Kubernetes?
How do you implement Blue-Green Deployment using Jenkins?
Explain Jenkins integration with cloud services (e.g., AWS, GCP).
monitor jenkins performance
What strategies do you use for Jenkins backup and recovery?
How do you use Jenkins for mobile app development?







